0 - CFFPlayer::~CFFPlayer
1 - CBaseEntity::SetRefEHandle(CBaseHandle const &)
2 - CBaseEntity::GetRefEHandle(void)
3 - CBaseEntity::GetCollideable(void)
4 - CBaseEntity::GetNetworkable(void)
5 - CBaseEntity::GetBaseEntity(void)
6 - CBaseEntity::GetModelIndex(void)
7 - CBaseEntity::GetModelName(void)
8 - CBaseEntity::SetModelIndex(int)
9 - CFFPlayer::_GetClassName(void)
10 - CFFPlayer::GetServerClass(void)
11 - CFFPlayer::GetClassName(void)
12 - CFFPlayer::YouForgotToImplementOrDeclareServerClass(void)
13 - CBasePlayer::GetDataDescMap(void)
14 - CBaseAnimating::TestCollision(Ray_t const &,uint,CGameTrace &)
15 - CBaseAnimating::TestHitboxes(Ray_t const &,uint,CGameTrace &)
16 - CBaseEntity::ComputeWorldSpaceSurroundingBox(Vector *,Vector *)
17 - CBaseEntity::ShouldCollide(int,int)
18 - CBaseEntity::SetOwnerEntity(CBaseEntity *)
19 - CBaseEntity::CanClipOwnerEntity(void)
20 - CBaseEntity::CanClipPlayer(void)
21 - CBasePlayer::ShouldTransmit(CCheckTransmitInfo const *)
22 - CBasePlayer::UpdateTransmitState(void)
23 - CBaseCombatCharacter::SetTransmit(CCheckTransmitInfo *,bool)
24 - CBasePlayer::GetTracerType(void)
25 - CFFPlayer::Spawn(void)
26 - CFFPlayer::Precache(void)
27 - CBaseEntity::SetModel(char const *,int)
28 - CBaseFlex::SetModel(char const *)
29 - CBaseAnimating::SetSkin(int)
30 - CBaseEntity::PostConstructor(char const *)
31 - CBaseEntity::PostClientActive(void)
32 - CBaseEntity::ParseMapData(CEntityMapData *)
33 - CBaseEntity::KeyValue(char const *,Vector)
34 - CBaseEntity::KeyValue(char const *,float)
35 - CBaseEntity::KeyValue(char const *,char const *)
36 - CBasePlayer::Activate(void)
37 - CBaseEntity::SetParent(CBaseEntity *,int)
38 - CFFPlayer::ObjectCaps(void)
39 - CBaseEntity::AcceptInput(char const *,CBaseEntity *,CBaseEntity *,variant_t,int)
40 - CBaseAnimating::GetInputDispatchEffectPosition(char const *,Vector &,QAngle &)
41 - CBasePlayer::DrawDebugGeometryOverlays(void)
42 - CBaseAnimating::DrawDebugTextOverlays(void)
43 - CBasePlayer::Save(ISave &)
44 - CBasePlayer::Restore(IRestore &)
45 - CBasePlayer::ShouldSavePhysics(void)
46 - CFFPlayer::TakeEmp(void)
47 - CBaseEntity::OnSave(IEntitySaveUtils *)
48 - CBasePlayer::OnRestore(void)
49 - CBasePlayer::RequiredEdictIndex(void)
50 - CBaseEntity::MoveDone(void)
51 - CBaseEntity::Think(void)
52 - CBasePlayer::NetworkStateChanged_m_nNextThinkTick(void *)
53 - CBasePlayer::NetworkStateChanged_m_nNextThinkTick(void)
54 - CBaseAnimating::GetBaseAnimating(void)
55 - CBaseEntity::GetResponseSystem(void)
56 - CBaseEntity::DispatchResponse(char const *)
57 - CBasePlayer::Classify(void)
58 - CBaseEntity::DeathNotice(CBaseEntity *)
59 - CBaseEntity::ShouldAttractAutoAim(CBaseEntity *)
60 - CBaseEntity::GetAutoAimRadius(void)
61 - CBaseEntity::GetAutoAimCenter(void)
62 - CBaseEntity::PassesDamageFilter(CTakeDamageInfo const &)
63 - CBasePlayer::TraceAttack(CTakeDamageInfo const &,Vector const &,CGameTrace *)
64 - CBaseEntity::CanBeHitByMeleeAttack(CBaseEntity *)
65 - CFFPlayer::OnTakeDamage(CTakeDamageInfo const &)
66 - CFFPlayer::TakeHealth(float,int)
67 - CFFPlayer::Event_Killed(CTakeDamageInfo const &)
68 - CBaseEntity::Event_KilledOther(CBaseEntity *,CTakeDamageInfo const &)
69 - CBaseCombatCharacter::BloodColor(void)
70 - CBaseEntity::IsTriggered(CBaseEntity *)
71 - CBaseEntity::IsNPC(void)
72 - CBaseCombatCharacter::MyCombatCharacterPointer(void)
73 - CBasePlayer::MyCharacterPointer(void)
74 - CBaseEntity::GetDelay(void)
75 - CBaseEntity::IsMoving(void)
76 - CFFPlayer::DamageDecal(int,int)
77 - CBaseEntity::DecalTrace(CGameTrace *,char const *)
78 - CBaseEntity::ImpactTrace(CGameTrace *,int,char *)
79 - CBaseEntity::OnControls(CBaseEntity *)
80 - CBaseEntity::HasTarget(string_t)
81 - CBasePlayer::IsPlayer(void)
82 - CBasePlayer::IsNetClient(void)
83 - CBaseEntity::IsTemplate(void)
84 - CBaseEntity::IsBaseObject(void)
85 - CBaseEntity::IsInWorld(void)
86 - CBaseEntity::GetServerVehicle(void)
87 - CBaseEntity::IsViewable(void)
88 - CFFPlayer::ChangeTeam(int)
89 - CBaseEntity::OnEntityEvent(EntityEvent_t,void *)
90 - CBaseEntity::CanStandOn(edict_t *)
91 - CBaseEntity::CanStandOn(CBaseEntity *)
92 - CBaseEntity::GetEnemy(void)
93 - CBaseEntity::GetEnemy(void)
94 - CBaseEntity::Use(CBaseEntity *,CBaseEntity *,USE_TYPE,float)
95 - CBaseEntity::StartTouch(CBaseEntity *)
96 - CFFPlayer::Touch(CBaseEntity *)
97 - CBaseEntity::EndTouch(CBaseEntity *)
98 - CBaseEntity::StartBlocked(CBaseEntity *)
99 - CBaseEntity::Blocked(CBaseEntity *)
100 - CBaseEntity::EndBlocked(void)
101 - CBasePlayer::PhysicsSimulate(void)
102 - CFFPlayer::UpdateOnRemove(void)
103 - CBaseEntity::StopLoopingSounds(void)
104 - CBaseEntity::SUB_AllowedToFade(void)
105 - CBaseAnimating::Teleport(Vector const *,QAngle const *,Vector const *)
106 - CBaseEntity::NotifySystemEvent(CBaseEntity *,notify_system_event_t,notify_system_event_params_t const &)
107 - CBasePlayer::MakeTracer(Vector const &,CGameTrace const &,int)
108 - CFFPlayer::FireBullets(FireBulletsInfo_t const &)
109 - CBasePlayer::DoImpactEffect(CGameTrace &,int)
110 - CBaseEntity::Respawn(void)
111 - CBaseEntity::IsLockedByMaster(void)
112 - CBaseAnimating::ModifyOrAppendCriteria(AI_CriteriaSet &)
113 - CBaseEntity::NetworkStateChanged_m_iMaxHealth(void *)
114 - CBaseEntity::NetworkStateChanged_m_iMaxHealth(void)
115 - CBasePlayer::NetworkStateChanged_m_iHealth(void *)
116 - CBasePlayer::NetworkStateChanged_m_iHealth(void)
117 - CBasePlayer::NetworkStateChanged_m_lifeState(void *)
118 - CBasePlayer::NetworkStateChanged_m_lifeState(void)
119 - CBaseEntity::NetworkStateChanged_m_iArmor(void *)
120 - CBaseEntity::NetworkStateChanged_m_iArmor(void)
121 - CBaseEntity::NetworkStateChanged_m_iMaxArmor(void *)
122 - CBaseEntity::NetworkStateChanged_m_iMaxArmor(void)
123 - CBaseEntity::GetDamageType(void)
124 - CBaseEntity::GetDamage(void)
125 - CBaseEntity::SetDamage(float)
126 - CBasePlayer::EyePosition(void)
127 - CBasePlayer::EyeAngles(void)
128 - CBasePlayer::LocalEyeAngles(void)
129 - CBaseEntity::EarPosition(void)
130 - CFFPlayer::BodyTarget(Vector const &,bool)
131 - CBaseEntity::HeadTarget(Vector const &)
132 - CBaseEntity::GetVectors(Vector *,Vector *,Vector *)
133 - CBaseEntity::GetViewOffset(void)
134 - CBasePlayer::GetSmoothedVelocity(void)
135 - CBaseAnimating::GetVelocity(Vector *,Vector *)
136 - CBaseCombatCharacter::FVisible(Vector const &,int,CBaseEntity * *)
137 - CBaseCombatCharacter::FVisible(CBaseEntity *,int,CBaseEntity * *)
138 - CBaseEntity::CanBeSeenBy(CAI_BaseNPC *)
139 - CBaseEntity::GetAttackDamageScale(CBaseEntity *)
140 - CBaseEntity::GetReceivedDamageScale(CBaseEntity *)
141 - CBaseEntity::CanBePoweredUp(void)
142 - CBaseEntity::AttemptToPowerup(int,float,float,CBaseEntity *,CDamageModifier *)
143 - CBaseEntity::GetGroundVelocityToApply(Vector &)
144 - CBaseEntity::PhysicsSplash(Vector const &,Vector const &,float,float)
145 - CBaseEntity::Splash(void)
146 - CBaseEntity::WorldSpaceCenter(void)
147 - CBaseEntity::GetSoundEmissionOrigin(void)
148 - CBaseEntity::CreateVPhysics(void)
149 - CBaseEntity::ForceVPhysicsCollide(CBaseEntity *)
150 - CBasePlayer::VPhysicsDestroyObject(void)
151 - CBasePlayer::VPhysicsUpdate(IPhysicsObject *)
152 - CBaseEntity::VPhysicsTakeDamage(CTakeDamageInfo const &)
153 - CBaseCombatCharacter::VPhysicsShadowCollision(int,gamevcollisionevent_t *)
154 - CBasePlayer::VPhysicsShadowUpdate(IPhysicsObject *)
155 - CBasePlayer::VPhysicsCollision(int,gamevcollisionevent_t *)
156 - CBaseEntity::VPhysicsFriction(IPhysicsObject *,float,int,int)
157 - CBaseEntity::UpdatePhysicsShadowToCurrentPosition(float)
158 - CBaseEntity::VPhysicsGetObjectList(IPhysicsObject * *,int)
159 - CBaseEntity::HasPhysicsAttacker(float)
160 - CBasePlayer::PhysicsSolidMaskForEntity(void)
161 - CBaseEntity::ResolveFlyCollisionCustom(CGameTrace &,Vector &)
162 - CBaseEntity::PerformCustomPhysics(Vector *,Vector *,QAngle *,QAngle *)
163 - CBaseAnimating::GetStepOrigin(void)
164 - CBaseAnimating::GetStepAngles(void)
165 - CBaseEntity::ShouldDrawWaterImpacts(void)
166 - CBaseEntity::NetworkStateChanged_m_fFlags(void *)
167 - CBaseEntity::NetworkStateChanged_m_fFlags(void)
168 - CBasePlayer::NetworkStateChanged_m_nWaterLevel(void *)
169 - CBasePlayer::NetworkStateChanged_m_nWaterLevel(void)
170 - CBasePlayer::NetworkStateChanged_m_hGroundEntity(void *)
171 - CBasePlayer::NetworkStateChanged_m_hGroundEntity(void)
172 - CBasePlayer::NetworkStateChanged_m_vecBaseVelocity(void *)
173 - CBasePlayer::NetworkStateChanged_m_vecBaseVelocity(void)
174 - CBasePlayer::NetworkStateChanged_m_flFriction(void *)
175 - CBasePlayer::NetworkStateChanged_m_flFriction(void)
176 - CBasePlayer::NetworkStateChanged_m_vecVelocity(void *)
177 - CBasePlayer::NetworkStateChanged_m_vecVelocity(void)
178 - CBasePlayer::NetworkStateChanged_m_vecViewOffset(void *)
179 - CBasePlayer::NetworkStateChanged_m_vecViewOffset(void)
180 - CBaseAnimating::GetIdealSpeed(void)
181 - CBaseAnimating::GetIdealAccel(void)
182 - CBaseAnimatingOverlay::StudioFrameAdvance(void)
183 - CBaseAnimating::IsActivityFinished(void)
184 - CBaseAnimating::ClampRagdollForce(Vector const &,Vector *)
185 - CFFPlayer::BecomeRagdollOnClient(Vector const &)
186 - CBaseAnimating::IsRagdoll(void)
187 - CBaseAnimating::CanBecomeRagdoll(void)
188 - CBaseAnimatingOverlay::GetSkeleton(CStudioHdr *,Vector * const,Quaternion * const,int)
189 - CBaseAnimating::GetBoneTransform(int,matrix3x4_t &)
190 - CBaseAnimating::SetupBones(matrix3x4_t *,int)
191 - CBaseAnimating::CalculateIKLocks(float)
192 - CBaseAnimatingOverlay::DispatchAnimEvents(CBaseAnimating *)
193 - CBaseAnimating::HandleAnimEvent(animevent_t *)
194 - CBaseAnimating::GetAttachment(int,matrix3x4_t &)
195 - CBaseAnimating::InitBoneControllers(void)
196 - CBaseAnimating::GetGroundSpeedVelocity(void)
197 - CBaseAnimating::Ignite(float,bool,float,bool)
198 - CFFPlayer::Extinguish(void)
199 - CBaseCombatCharacter::SetLightingOriginRelative(CBaseEntity *)
200 - CBaseAnimating::SetLightingOrigin(CBaseEntity *)
201 - CBaseFlex::SetViewtarget(Vector const &)
202 - CBaseFlex::StartSceneEvent(CSceneEventInfo *,CChoreoScene *,CChoreoEvent *,CChoreoActor *,CBaseEntity *)
203 - CBaseFlex::ProcessSceneEvents(void)
204 - CBaseFlex::ProcessSceneEvent(CSceneEventInfo *,CChoreoScene *,CChoreoEvent *)
205 - CBaseFlex::ClearSceneEvent(CSceneEventInfo *,bool,bool)
206 - CBaseFlex::CheckSceneEventCompletion(CSceneEventInfo *,float,CChoreoScene *,CChoreoEvent *)
207 - CBaseCombatCharacter::GetPhysicsImpactDamageTable(void)
208 - CBaseCombatCharacter::FInViewCone(Vector const &)
209 - CBaseCombatCharacter::FInViewCone(CBaseEntity *)
210 - CBaseCombatCharacter::FInAimCone(Vector const &)
211 - CBaseCombatCharacter::FInAimCone(CBaseEntity *)
212 - CBaseCombatCharacter::ShouldShootMissTarget(CBaseCombatCharacter *)
213 - CBaseCombatCharacter::FindMissTarget(void)
214 - CBaseCombatCharacter::HandleInteraction(int,void *,CBaseCombatCharacter *)
215 - CBasePlayer::BodyAngles(void)
216 - CBaseCombatCharacter::BodyDirection2D(void)
217 - CBaseCombatCharacter::BodyDirection3D(void)
218 - CBaseCombatCharacter::HeadDirection2D(void)
219 - CBaseCombatCharacter::HeadDirection3D(void)
220 - CBaseCombatCharacter::EyeDirection2D(void)
221 - CBaseCombatCharacter::EyeDirection3D(void)
222 - CFFPlayer::GiveAmmo(int,int,bool)
223 - CBaseCombatCharacter::NPC_TranslateActivity(Activity)
224 - CBaseCombatCharacter::Weapon_TranslateActivity(Activity,bool *)
225 - CBasePlayer::Weapon_CanUse(CBaseCombatWeapon *)
226 - CBasePlayer::Weapon_Equip(CBaseCombatWeapon *)
227 - CBaseCombatCharacter::Weapon_EquipAmmoOnly(CBaseCombatWeapon *)
228 - CBasePlayer::Weapon_Drop(CBaseCombatWeapon *,Vector const *,Vector const *)
229 - CBasePlayer::Weapon_Switch(CBaseCombatWeapon *,int)
230 - CBasePlayer::Weapon_ShootPosition(void)
231 - CBaseCombatCharacter::Weapon_CanSwitchTo(CBaseCombatWeapon *)
232 - CBaseCombatCharacter::Weapon_SlotOccupied(CBaseCombatWeapon *)
233 - CBaseCombatCharacter::Weapon_GetSlot(int)
234 - CBaseCombatCharacter::AddPlayerItem(CBaseCombatWeapon *)
235 - CBasePlayer::RemovePlayerItem(CBaseCombatWeapon *)
236 - CBaseCombatCharacter::CanBecomeServerRagdoll(void)
237 - CFFPlayer::OnTakeDamage_Alive(CTakeDamageInfo const &)
238 - CBaseCombatCharacter::OnTakeDamage_Dying(CTakeDamageInfo const &)
239 - CBaseCombatCharacter::OnTakeDamage_Dead(CTakeDamageInfo const &)
240 - CBaseCombatCharacter::OnFriendDamaged(CBaseCombatCharacter *,CBaseEntity *)
241 - CBaseCombatCharacter::NotifyFriendsOfDamage(CBaseEntity *)
242 - CBaseCombatCharacter::GetDeathActivity(void)
243 - CBaseCombatCharacter::CorpseGib(CTakeDamageInfo const &)
244 - CBaseCombatCharacter::CorpseFade(void)
245 - CFFPlayer::HasHumanGibs(void)
246 - CBaseCombatCharacter::HasAlienGibs(void)
247 - CFFPlayer::ShouldGib(CTakeDamageInfo const &)
248 - CBaseCombatCharacter::OnKilledNPC(CBaseCombatCharacter *)
249 - CFFPlayer::Event_Gibbed(CTakeDamageInfo const &)
250 - CBasePlayer::Event_Dying(void)
251 - CBaseCombatCharacter::BecomeRagdoll(CTakeDamageInfo const &,Vector const &)
252 - CBaseCombatCharacter::FixupBurningServerRagdoll(CBaseEntity *)
253 - CBaseCombatCharacter::BecomeRagdollBoogie(CBaseEntity *,Vector const &,float,int)
254 - CBaseCombatCharacter::CheckTraceHullAttack(Vector const &,Vector const &,Vector const &,Vector const &,int,int,float,bool)
255 - CBaseCombatCharacter::CheckTraceHullAttack(float,Vector const &,Vector const &,int,int,float,bool)
256 - CBaseCombatCharacter::PushawayTouch(CBaseEntity *)
257 - CBaseCombatCharacter::IRelationType(CBaseEntity *)
258 - CBaseCombatCharacter::IRelationPriority(CBaseEntity *)
259 - CBaseCombatCharacter::IsInAVehicle(void)
260 - CBasePlayer::GetVehicle(void)
261 - CBasePlayer::GetVehicleEntity(void)
262 - CBaseCombatCharacter::CalcWeaponProficiency(CBaseCombatWeapon *)
263 - CBaseCombatCharacter::GetAttackSpread(CBaseCombatWeapon *,CBaseEntity *)
264 - CBaseCombatCharacter::GetSpreadBias(CBaseCombatWeapon *,CBaseEntity *)
265 - CBasePlayer::DoMuzzleFlash(void)
266 - CBaseCombatCharacter::AddEntityRelationship(CBaseEntity *,Disposition_t,int)
267 - CBaseCombatCharacter::RemoveEntityRelationship(CBaseEntity *)
268 - CBaseCombatCharacter::AddClassRelationship(Class_T,Disposition_t,int)
269 - CBaseCombatCharacter::OnChangeActiveWeapon(CBaseCombatWeapon *,CBaseCombatWeapon *)
270 - CBasePlayer::NetworkStateChanged_m_iAmmo(void *)
271 - CBasePlayer::NetworkStateChanged_m_iAmmo(void)
272 - CFFPlayer::CreateViewModel(int)
273 - CBasePlayer::SetupVisibility(CBaseEntity *,uchar *,int)
274 - CBasePlayer::WantsLagCompensationOnEntity(CBasePlayer const *,CUserCmd const *,CBitVec<2048> const *)
275 - CBasePlayer::SharedSpawn(void)
276 - CFFPlayer::InitialSpawn(void)
277 - CBasePlayer::InitHUD(void)
278 - CBasePlayer::ShowViewPortPanel(char const *,bool,KeyValues *)
279 - CBasePlayer::PlayerDeathThink(void)
280 - CBasePlayer::Jump(void)
281 - CBasePlayer::Duck(void)
282 - CFFPlayer::PreThink(void)
283 - CFFPlayer::PostThink(void)
284 - CFFPlayer::DamageEffect(float,int)
285 - CFFPlayer::OnDamagedByExplosion(CTakeDamageInfo const &)
286 - CBasePlayer::ShouldFadeOnDeath(void)
287 - CBasePlayer::IsFakeClient(void)
288 - CBasePlayer::GetPlayerMins(void)
289 - CBasePlayer::GetPlayerMaxs(void)
290 - CBasePlayer::CalcRoll(QAngle const &,Vector const &,float,float)
291 - CFFPlayer::PackDeadPlayerItems(void)
292 - CBasePlayer::RemoveAllItems(bool)
293 - CBasePlayer::Weapon_SetLast(CBaseCombatWeapon *)
294 - CBasePlayer::Weapon_ShouldSetLast(CBaseCombatWeapon *,CBaseCombatWeapon *)
295 - CBasePlayer::Weapon_ShouldSelectItem(CBaseCombatWeapon *)
296 - CBasePlayer::UpdateClientData(void)
297 - CBasePlayer::ExitLadder(void)
298 - CFFPlayer::FlashlightIsOn(void)
299 - CFFPlayer::FlashlightTurnOn(void)
300 - CFFPlayer::FlashlightTurnOff(void)
301 - CBasePlayer::IsIlluminatedByFlashlight(CBaseEntity *,float *)
302 - CBasePlayer::UpdateStepSound(surfacedata_t *,Vector const &,Vector const &)
303 - CFFPlayer::PlayStepSound(Vector &,surfacedata_t *,float,bool)
304 - CBasePlayer::DeathSound(CTakeDamageInfo const &)
305 - CBasePlayer::SetAnimation(PLAYER_ANIM)
306 - CBasePlayer::ImpulseCommands(void)
307 - CFFPlayer::CheatImpulseCommands(int)
308 - CBasePlayer::ClientCommand(char const *)
309 - CBasePlayer::StartObserverMode(int)
310 - CBasePlayer::StopObserverMode(void)
311 - CBasePlayer::SetObserverMode(int)
312 - CBasePlayer::GetObserverMode(void)
313 - CBasePlayer::SetObserverTarget(CBaseEntity *)
314 - CBasePlayer::ObserverUse(bool)
315 - CBasePlayer::GetObserverTarget(void)
316 - CBasePlayer::FindNextObserverTarget(bool)
317 - CBasePlayer::GetNextObserverSearchStartPoint(bool)
318 - CBasePlayer::IsValidObserverTarget(CBaseEntity *)
319 - CBasePlayer::CheckObserverSettings(void)
320 - CBasePlayer::JumptoPosition(Vector const &,QAngle const &)
321 - CBasePlayer::ForceObserverMode(int)
322 - CBasePlayer::ResetObserverMode(void)
323 - CBasePlayer::StartReplayMode(float,float,int)
324 - CBasePlayer::StopReplayMode(void)
325 - CBasePlayer::GetDelayTicks(void)
326 - CBasePlayer::GetReplayEntity(void)
327 - CBasePlayer::CreateCorpse(void)
328 - CFFPlayer::EntSelectSpawnPoint(void)
329 - CBasePlayer::GetInVehicle(IServerVehicle *,int)
330 - CFFPlayer::LeaveVehicle(Vector const &,QAngle const &)
331 - CBasePlayer::OnVehicleStart(void)
332 - CBasePlayer::OnVehicleEnd(Vector &)
333 - CBasePlayer::BumpWeapon(CBaseCombatWeapon *)
334 - CBasePlayer::SelectLastItem(void)
335 - CBasePlayer::SelectItem(char const *,int)
336 - CBasePlayer::ItemPostFrame(void)
337 - CBasePlayer::GiveNamedItem(char const *,int)
338 - CBasePlayer::CheckTrainUpdate(void)
339 - CBasePlayer::SetPlayerUnderwater(bool)
340 - CBasePlayer::CanBreatheUnderwater(void)
341 - CFFPlayer::PlayerUse(void)
342 - CBasePlayer::PlayUseDenySound(void)
343 - CBasePlayer::FindUseEntity(void)
344 - CBasePlayer::IsUseableEntity(CBaseEntity *,uint)
345 - CBasePlayer::PickupObject(CBaseEntity *,bool)
346 - CBasePlayer::ForceDropOfCarriedPhysObjects(CBaseEntity *)
347 - CBasePlayer::GetHeldObjectMass(IPhysicsObject *)
348 - CBasePlayer::UpdateGeigerCounter(void)
349 - CBasePlayer::GetAutoaimVector(autoaim_params_t &)
350 - CBasePlayer::GetAutoaimVector(float,float)
351 - CBasePlayer::GetAutoaimVector(float)
352 - CBasePlayer::ShouldAutoaim(void)
353 - CBasePlayer::ForceClientDllUpdate(void)
354 - CBasePlayer::ProcessUsercmds(CUserCmd *,int,int,int,bool)
355 - CBasePlayer::PlayerRunCommand(CUserCmd *,IMoveHelper *)
356 - CBasePlayer::CanSpeak(void)
357 - CBasePlayer::CanHearChatFrom(CBasePlayer *)
358 - CBasePlayer::ModifyOrAppendPlayerCriteria(AI_CriteriaSet &)
359 - CBasePlayer::CheckChatText(char *,int)
360 - CBasePlayer::IsFollowingPhysics(void)
361 - CBasePlayer::InitVCollision(void)
362 - CBasePlayer::UpdatePhysicsShadowToCurrentPosition(void)
363 - CBasePlayer::EquipSuit(bool)
364 - CBasePlayer::RemoveSuit(void)
365 - CBasePlayer::CommitSuicide(void)
366 - CBasePlayer::IsBot(void)
367 - CFFPlayer::NetworkStateChanged_m_nButtons(void *)
368 - CFFPlayer::NetworkStateChanged_m_nButtons(void)
369 - CBasePlayer::SpawnArmorValue(void)
370 - CBasePlayer::NetworkStateChanged_m_ArmorValue(void *)
371 - CBasePlayer::NetworkStateChanged_m_ArmorValue(void)
372 - CFFPlayer::GetEncryptionKey(void)
373 - CFFPlayer::Ignite(bool,float,bool)
374 - CFFPlayer::Ignite(bool,float,bool,float)
375 - CFFPlayer::TakeNamedItem(char const *)
376 - CFFPlayer::HandleShotImpactingWater(FireBulletsInfo_t const &,Vector const &,ITraceFilter *,Vector *)
